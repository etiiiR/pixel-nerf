# SRN experiments config for Pollen Dataset
data {
    format = srn
    category = "pollen"
    image_size = 128
}

# Model settings
model {
    # Condition on local encoder
    use_encoder = True

    # Global shape encoder for per-object embedding
    use_global_encoder = True
    global_encoder {
        backbone   = resnet18
        pretrained = False
        code_dim   = 128
    }

    # Use full 3D coordinates
    use_xyz = True
    canon_xyz = True

    # Positional encoding for geometry
    use_code = True
    code {
        num_freqs     = 8
        freq_factor   = 2.0
        include_input = True
    }

    # View-dependent effects
    use_viewdirs = True
    use_code_viewdirs = False

    # Coarse and fine MLP architectures
    mlp_coarse {
        type = resnet
        n_blocks = 3
        d_hidden = 512
        combine_layer = 3
        combine_type  = average
    }
    mlp_fine {
        type = resnet
        n_blocks = 3
        d_hidden = 512
        combine_layer = 3
        combine_type  = average
    }

    # Local image encoder
    encoder {
        backbone   = resnet34
        pretrained = True
        num_layers = 4
    }
}

# Rendering settings
renderer {
    n_coarse      = 64
    n_fine        = 128
    n_fine_depth  = 8
    depth_std     = 0.01
    sched         = []
    white_bkgd    = True
}

# Loss settings
loss {
    rgb {
        use_l1 = False
    }
    rgb_fine {
        use_l1 = False
    }
    alpha {
        lambda_alpha = 0.0001
        clamp_alpha  = 100
        init_epoch   = 5
    }
    lambda_coarse = 1.0
    lambda_fine   = 1.0
}

# Training settings
train {
    print_interval     = 2
    save_interval      = 50
    vis_interval       = 100
    eval_interval      = 50

    accu_grad          = 1
    num_epoch_repeats  = 5
    batch_size_pts     = 65536
    num_epochs         = 350
}

optimizer {
    type          = adam
    lr            = 3e-4
    weight_decay  = 1e-5
}

lr_sched {
    type       = cosine
    t_warmup   = 2000
    t_total    = 1000000
    min_lr     = 1e-5
}
